colnames(df)[which(names(df) == "t_us")] <- "speedup"
datosSpeedup = datosTiempo
algBase = "algSec (O0"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
tiemposAlgBase$t_us
tiemposAlgBase
datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$alg
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(df)[which(names(df) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
install.packages("ggrepel")
library("ggrepel")
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = alg),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
?geom_label_repel
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = alg, group = alg),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
datosSpeedup$label[which(datosSpeedup$N == max(datosSpeedup$N))] <- datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))]
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
datosSpeedup$label <- NA
datosSpeedup$label[which(datosSpeedup$N == max(datosSpeedup$N))] <- datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))]
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = alg, group = alg),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
#plotCiclos
plotSpeedup
datosSpeedup$alg
datosSpeedup$label[which(datosSpeedup$N == max(datosSpeedup$N))]
datosSpeedup$label
datosSpeedup$label <- NA
datosSpeedup$label
datosSpeedup$label[which(datosSpeedup$N == max(datosSpeedup$N))]
datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))]
datosSpeedup$label <- NA
datosSpeedup$label[which(datosSpeedup$N == max(datosSpeedup$N))] <- datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))]
datosSpeedup$label
c(datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))])
datosSpeedup$alg[which(datosSpeedup$N == max(datosSpeedup$N))]
library(ggplot2)
library("ggrepel")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # wd = carpeta contenedora del script (solo funciona en RSTUDIO)
# Preparar datos
datos = read.table("salida.txt", header = TRUE, sep = ",")
# Mediana de todas las observaciones
datosTiempo <- aggregate( t_us ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotTiempo = ggplot(data = datosTiempo, mapping = aes(x = N, y = t_us)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - microsegundos",
x = "N (Tamaño del problema)",
y = "microsegundos") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaTiempo.png", plotTiempo, width = 15, height = 10)
datosCiclos <- aggregate( ck ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotCiclos = ggplot(data = datosCiclos, mapping = aes(x = N, y = ck)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - ciclos",
x = "N (Tamaño del problema)",
y = "Ciclos de reloj totales") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaCiclos.png", plotCiclos, width = 15, height = 10)
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
# Mostrar gráficas
plotTiempo
#plotCiclos
plotSpeedup
library(ggplot2)
library("ggrepel")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # wd = carpeta contenedora del script (solo funciona en RSTUDIO)
# Preparar datos
datos = read.table("salida.txt", header = TRUE, sep = ",")
# Mediana de todas las observaciones
datosTiempo <- aggregate( t_us ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotTiempo = ggplot(data = datosTiempo, mapping = aes(x = N, y = t_us)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - microsegundos",
x = "N (Tamaño del problema)",
y = "microsegundos") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaTiempo.png", plotTiempo, width = 15, height = 10)
datosCiclos <- aggregate( ck ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotCiclos = ggplot(data = datosCiclos, mapping = aes(x = N, y = ck)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - ciclos",
x = "N (Tamaño del problema)",
y = "Ciclos de reloj totales") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaCiclos.png", plotCiclos, width = 15, height = 10)
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaSpeedup.png", plotSpeedup, width = 15, height = 10)
# Mostrar gráficas
#plotTiempo
#plotCiclos
#plotSpeedup
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaSpeedup.png", plotSpeedup, width = 15, height = 10)
library(ggplot2)
library("ggrepel")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # wd = carpeta contenedora del script (solo funciona en RSTUDIO)
# Preparar datos
datos = read.table("salida.txt", header = TRUE, sep = ",")
# Mediana de todas las observaciones
datosTiempo <- aggregate( t_us ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotTiempo = ggplot(data = datosTiempo, mapping = aes(x = N, y = t_us)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - microsegundos",
x = "N (Tamaño del problema)",
y = "microsegundos") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaTiempo.png", plotTiempo, width = 15, height = 10)
datosCiclos <- aggregate( ck ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotCiclos = ggplot(data = datosCiclos, mapping = aes(x = N, y = ck)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - ciclos",
x = "N (Tamaño del problema)",
y = "Ciclos de reloj totales") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaCiclos.png", plotCiclos, width = 15, height = 10)
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaSpeedup.png", plotSpeedup, width = 15, height = 10)
# Mostrar gráficas
#plotTiempo
#plotCiclos
#plotSpeedup
ggsave("graficaSpeedup.png", plotSpeedup, width = 15, height = 10)
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
plotSpeedup
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
datosSpeedup = datosTiempo
datosSpeedup = datosTiempo
library(ggplot2)
library("ggrepel")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # wd = carpeta contenedora del script (solo funciona en RSTUDIO)
# Preparar datos
datos = read.table("salida.txt", header = TRUE, sep = ",")
# Mediana de todas las observaciones
datosTiempo <- aggregate( t_us ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotTiempo = ggplot(data = datosTiempo, mapping = aes(x = N, y = t_us)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - microsegundos",
x = "N (Tamaño del problema)",
y = "microsegundos") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
datosCiclos <- aggregate( ck ~ N + alg, data = datos, median)
# Grafica de tamaño-ciclos totales para cada algoritmo
plotCiclos = ggplot(data = datosCiclos, mapping = aes(x = N, y = ck)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Comparación tamaño - ciclos",
x = "N (Tamaño del problema)",
y = "Ciclos de reloj totales") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaCiclos.png", plotCiclos, width = 15, height = 10)
datosSpeedup = datosTiempo
View(datosTiempo)
View(datosTiempo)
datosSpeedup = datosTiempo
algBase = "algSec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup = datosTiempo
algBase = "Sec (O0)"
tiemposAlgBase = datosSpeedup[datosSpeedup$alg == algBase, ]
datosSpeedup$t_us = apply(datosSpeedup, 1, function(x) {
x[3] = tiemposAlgBase$t_us[tiemposAlgBase$N == as.numeric(trimws(x[1], "both"))] / as.numeric(x[3])
})
colnames(datosSpeedup)[which(names(datosSpeedup) == "t_us")] <- "speedup"
plotSpeedup = ggplot(data = datosSpeedup, mapping = aes(x = N, y = speedup)) +
geom_line(aes(color = alg, group = alg), lwd = 1) +
labs(title = "Speedup de cada algoritmo respecto al secuencial con -O0",
x = "N (Tamaño del problema)",
y = "Veces más rápido") +
theme_bw() +
theme(legend.title = element_text(size = 15),
legend.text = element_text(size=15),
legend.key.size = unit(1, 'cm'),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
axis.text.x = element_text(size = 30),
axis.text.y = element_text(size = 30),
title = element_text(size = 25))
ggsave("graficaSpeedup.png", plotSpeedup, width = 15, height = 10)
plotSpeedup
